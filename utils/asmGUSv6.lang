<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Callum Lowcay <callum@callumscode.com>
 Copyright (C) 2008-2010 Callum Lowcay

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<!--
	Mostly copied and pasted from c.lang
-->
<language id="asmgus16v6" _name="AsmGUS16v6" version="2.0" _section="Others">
    <metadata>
      <property name="mimetypes">text/x-x86asm</property><!--Just a guess-->
      <property name="globs">*.[sS]</property>
      <property name="line-comment-start">*</property>
    </metadata>

    <styles>
        <style id="comment"           _name="Comment"             map-to="def:comment"/>
        <style id="error"             _name="Error"               map-to="def:error"/>
        <style id="string"            _name="String"              map-to="def:string"/>
        <style id="preprocessor"      _name="Preprocessor"        map-to="def:preprocessor"/>
        <style id="opcode"            _name="Opcode"              map-to="def:keyword"/>
        <style id="register"          _name="Register"            map-to="def:identifier"/>
        <style id="type"              _name="Data Type"           map-to="def:type"/>
        <style id="escaped-character" _name="Escaped Character"   map-to="def:special-char"/>
        <style id="floating-point"    _name="Floating point number" map-to="def:floating-point"/>
        <style id="decimal"           _name="Decimal number"      map-to="def:decimal"/>
        <style id="octal"             _name="Octal number"        map-to="def:base-n-integer"/>
        <style id="hexadecimal"       _name="Hexadecimal number"  map-to="def:base-n-integer"/>
        <style id="binary"            _name="Binary number"       map-to="def:base-n-integer"/>
    </styles>
    
    <default-regex-options case-sensitive="false"/>

    <definitions>
        <define-regex id="escaped-character" extended="true">
            \\(      # leading backslash
            [\\\"\'] # escaped character
            )
        </define-regex>

        <context id="asmgus16v6">
            <include>
                <!-- Comments -->
                <context id="comment" style-ref="comment" end-at-line-end="true">
                    <start>((?&lt;!\S)[*])|(;)</start>
                    <include>
                      <context ref="def:in-line-comment"/>
                    </include>
                </context>
		
                <context id="string" style-ref="string" end-at-line-end="true">
                    <start>"</start>
                    <end>"</end>
                    <include>
                        <context id="escaped-characterw" style-ref="escaped-character">
                            <match>\%{escaped-character}</match>
                        </context>
                    </include>
                </context>
                <context id="string2" style-ref="string" end-at-line-end="true">
                    <start>'</start>
                    <end>'</end>
                    <include>
                        <context id="escaped-characters" style-ref="escaped-character">
                            <match>\%{escaped-character}</match>
                        </context>
                    </include>
                </context>


                <context id="float" style-ref="floating-point">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
                        ([0-9]+[Ee][+-]?[0-9]*))
                        (?![\w\.])
                    </match>
                </context>

                <context id="hexadecimal" style-ref="hexadecimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ((0[xX][a-fA-F0-9]+)|([0-9][a-fA-F0-9]*h)|(\$[0-9A-Fa-f][a-fA-F0-9]+))
                        (?![\w\.])
                    </match>
                </context>

                <context id="octal" style-ref="octal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        [0-7]+[QOqo]
                        (?![\w\.])
                    </match>
                </context>

                <context id="decimal" style-ref="decimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        [0-9]+
                        (?![\w\.])
                    </match>
                </context>

                <context id="binary" style-ref="binary">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ([01]+[Bb])|(%[01]+)
                        (?![\w\.])
                    </match>
                </context>

                <!-- Opcodes -->
                <context id="opcodes_simple" style-ref="opcode">
		<keyword>add</keyword>
		<keyword>sub</keyword>
		<keyword>adc</keyword>
		<keyword>sbc</keyword>
		<keyword>and</keyword>
		<keyword>or</keyword>
		<keyword>xor</keyword>
		<keyword>bic</keyword>
		
		<keyword>addi</keyword>
		<keyword>subi</keyword>
		<keyword>adci</keyword>
		<keyword>sbci</keyword>
		<keyword>andi</keyword>
		<keyword>ori</keyword>
		<keyword>xori</keyword>
		<keyword>cmpi</keyword>
		<keyword>ldi</keyword>

		<keyword>not</keyword>
		<keyword>neg</keyword>
		<keyword>shr</keyword>
		<keyword>shra</keyword>
		<keyword>rorc</keyword>
		<keyword>rori</keyword>
		
		<keyword>ld</keyword>
		<keyword>st</keyword>
		<keyword>ldpc</keyword>
		<keyword>jind</keyword>
		<keyword>reti</keyword>

		<keyword>jal</keyword>
		<keyword>jz</keyword>
		<keyword>jnz</keyword>
		<keyword>jc</keyword>
		<keyword>jnc</keyword>
		<keyword>jmi</keyword>
		<keyword>jpl</keyword>
		<keyword>jv</keyword>
		<keyword>jr</keyword>

                </context>
                
                <context id="registers" style-ref="register">
		<keyword>r0</keyword>
		<keyword>r1</keyword>
		<keyword>r2</keyword>
		<keyword>r3</keyword>
		<keyword>r4</keyword>
		<keyword>r5</keyword>
		<keyword>r6</keyword>
		<keyword>r7</keyword>
                </context>

                <context id="types" style-ref="type">
		<keyword>include</keyword>
		<keyword>word</keyword>
		<keyword>org</keyword>
		<keyword>asczbe</keyword>
		<keyword>asczle</keyword>
		<keyword>=</keyword>
		</context>
                

            </include>
        </context>
        
    </definitions>
</language>
